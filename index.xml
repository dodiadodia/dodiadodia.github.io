<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dodia&#39;s Blog</title>
    <link>https://dodiadodia.github.io/</link>
    <description>Recent content on Dodia&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <copyright>All rights reserved - 2020</copyright>
    <lastBuildDate>Fri, 20 Mar 2020 16:44:40 +0800</lastBuildDate>
    
	<atom:link href="https://dodiadodia.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kube Plugin</title>
      <link>https://dodiadodia.github.io/post/kube-plugin/</link>
      <pubDate>Fri, 20 Mar 2020 16:44:40 +0800</pubDate>
      
      <guid>https://dodiadodia.github.io/post/kube-plugin/</guid>
      <description>Kubectl几个比较有用的插件分享 介绍 kubectl命令支持插件扩展，具体介绍可以参考下面的链接
https://kubernetes.io/docs/tasks/extend-kubectl/kubectl-plugins/
kubectl的plugin就是一个可执行文件，以kubectl-*方式命令，放置在PATH路径中，kubectl plugin list的时候就会在PATH路径下递归寻找相应的kubect-*文件，作为其plugin输出。
github上的这个项目https://github.com/ishantanu/awesome-kubectl-plugins 分享了很多kubectl的plugin，我试用了其中的几个，现在把我觉得有用的几个plugin记录一下
kubectl krew介绍 kubectl krew是第一个介绍的，其实他就是一个plugin的管理器，和mac上的brew类似，用于管理kubectl插件的，其github地址如下https://github.com/kubernetes-sigs/krew
直接使用下面的代码安装kubectl
( set -x; cd &amp;quot;$(mktemp -d)&amp;quot; &amp;amp;&amp;amp; curl -fsSLO &amp;quot;https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.{tar.gz,yaml}&amp;quot; &amp;amp;&amp;amp; tar zxvf krew.tar.gz &amp;amp;&amp;amp; KREW=./krew-&amp;quot;$(uname | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)_amd64&amp;quot; &amp;amp;&amp;amp; &amp;quot;$KREW&amp;quot; install --manifest=krew.yaml --archive=krew.tar.gz &amp;amp;&amp;amp; &amp;quot;$KREW&amp;quot; update )  然后把kubectl-krew的执行命令所在位置添加到PATH目录，如下
export PATH=&amp;quot;${KREW_ROOT:-$HOME/.krew}/bin:$PATH&amp;quot;  其实上面的工作很简单，就是从github的release上下载kubectl-krew的压缩包并解压，然后放置到PATH目录中。这样执行kubectl krew的时候就等于是执行kubectl-krew了，kubectl-krew内部记录了索引，会对plugin的整个生命周期进行管理，比如list search install uninstall等等操作，和brew的理念完全一致。然后通过kubectl krew install就可以安装需要的插件了（有些插件krew安装的版本比github上还新，有些不太理解）
下面罗列出一些使用示例：
[root@dodia1 ~]# kubectl krew list PLUGIN VERSION krew v0.3.4  [root@dodia1 ~]# kubectl krew search debug NAME DESCRIPTION INSTALLED debug Attach ephemeral debug container to running pod no debug-shell Create pod with interactive kube-shell.</description>
    </item>
    
    <item>
      <title>Certbot</title>
      <link>https://dodiadodia.github.io/post/certbot/</link>
      <pubDate>Sun, 15 Mar 2020 21:38:17 +0800</pubDate>
      
      <guid>https://dodiadodia.github.io/post/certbot/</guid>
      <description>使用Certbot给网站申请通配符SSL证书 背景 最近在给组内多个k8s集群维护内部的ingress service，很多对外提供的https i</description>
    </item>
    
    <item>
      <title>Badger Introduction</title>
      <link>https://dodiadodia.github.io/post/badger/</link>
      <pubDate>Tue, 16 Oct 2018 11:12:14 +0800</pubDate>
      
      <guid>https://dodiadodia.github.io/post/badger/</guid>
      <description>Badger: 一个纯Go编写的高速KV存储 最近我们使用纯Go语言编写了一套基于LSM Tree的KV存储数据库，能够实现高效的数据存取以及支持持久化。这个</description>
    </item>
    
  </channel>
</rss>